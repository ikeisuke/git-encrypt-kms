#!/usr/bin/env bash
OPTIONS_SPEC='git encrypt --install
git encrypt --add-pattern <pattern>
git encrypt --list-patterns
--
install Installs encrypt filters script settings and encryption config.
add-pattern Adds pattern for encryption file.
list-patterns Lists pattern for encrytion target.'

# Include the git setup script. This parses and normalized CLI arguments.
. $(git --exec-path)/git-sh-setup

function add_or_replace_git_config() {
  local key="$1" value=$(git config --get --local "$1") newvalue="$2"
  local command="--replace-all"
  [ "$value" == "$newvalue" ] && return 0
  [ -z "$value" ] && command="--add"
  git config $command "$key" "$newvalue"
}

function add_attribute() {
  local attribute="$1" file="$2"
  [ -z "$file" ] && file="$(git rev-parse --show-toplevel)/.gitattributes"
  [ ! -f "$file" ] && touch "$file"
  grep "$attribute" "$file" >/dev/null 2>&1
  [ "0" == "$?" ] || echo "$attribute" >> "$file"
}

function install() {
  local attributes=$GIT_DIR/info/attributes \
        encrypted="$(git rev-parse --show-toplevel)/.gitencrypted"
  add_or_replace_git_config merge.renormalize true
  add_or_replace_git_config filter.git-encrypt.clean  "git-encrypt --clean"
  add_or_replace_git_config filter.git-encrypt.smudge "git-encrypt --smudge"
  add_or_replace_git_config diff.git-encrypt.textconv "git-encrypt --diff"
  add_attribute ".git* !filter !diff" $attributes
  which aws >/dev/null 2>&1
  [ $? -ne 0 ] && echo 'Aws-cli is not installed. Please install aws-cli or add installed directory to PATH environment.' && exit 1
  aws configure list | grep access_key | grep 'not set' >/dev/null 2>&1
  [ $? -eq 0 ] && echo 'You have no aws credentials. Please run `aws configure`' && exit 1
  echo -n "Input your aws profile name []: "
  read profile
  add_or_replace_git_config encrypt.kms.profile "$profile"
  saved_alias=$(git config --get encrypt.kms.alias)
  echo -n "Input your aws kms alias [$saved_alias]: "
  read alias
  [ -z "$alias" ] && [ -n "$saved_alias" ] && alias="$saved_alias"
  [ -z "$alias" ] && echo "You must specify an alias. Please input you kms alias." && exit 1
  add_or_replace_git_config encrypt.kms.alias "$alias"
  profile_option=''
  [ -n "$profile" ] && profile_option="--profile '$profile'"
  [ -s "$encrypted" ] && echo "Encryption key is generated. If you want to regenerate encryption key. " || aws kms generate-data-key-without-plaintext \
    --key-id "alias/$alias" $profile_option \
    --key-spec AES_256 --query CiphertextBlob \
    --output text | base64 --decode > $encrypted 2>/dev/null
}

function decrypted_data_key() {
  local file="$(git rev-parse --show-toplevel)/.gitencrypted" \
        decrypted=$GIT_DIR/info/decrypted-data-key \
        profile="$(git config --get encrypt.kms.profile)"
  [ -e $decrypted ] || aws kms decrypt --profile "$profile" \
    --ciphertext-blob "fileb://${file}" --query Plaintext --output text | base64 -D > $decrypted
  cat $decrypted
}

function add_filter_pattern() {
  local pattern="$1"
  add_attribute "$pattern filter=git-encrypt diff=git-encrypt"
}

function list_filter_patterns() {
  local dir=$(git rev-parse --show-toplevel)
  grep "filter=git-encrypt diff=git-encrypt" $dir/.gitattributes 2>/dev/null | awk '{print $1}'
}

function clean() {
  local pass="pass:$(decrypted_data_key)"
  openssl enc -base64 -aes-256-cbc -pass $pass
}

function smudge() {
  local pass="pass:$(decrypted_data_key)"
  openssl enc -d -base64 -aes-256-cbc -pass $pass 2>/dev/null || cat
}

function diff() {
  local pass="pass:$(decrypted_data_key)"
  openssl enc -d -base64 -aes-256-cbc -pass $pass -in "$1" 2>/dev/null || cat "$1"
}

declare COMMAND="$1"
shift 1

case "$COMMAND" in
  --) "$0" -h; exit 0 ;;
  --install) install;;
  --add-pattern) add_filter_pattern "$1" ;;
  --list-patterns) list_filter_patterns ;;
  --clean) clean ;;
  --smudge) smudge ;;
  --diff) diff "$1" ;;
  *) echo "Unknown option: ${option}"; "$0" -h; exit 1;;
esac

