#!/usr/bin/env bash

# Include the git setup script. This parses and normalized CLI arguments.
. $(git --exec-path)/git-sh-setup

function add_or_replace_git_config() {
  local key="$1" value=$(git config --get --local "$1") newvalue="$2"
  local command="--replace-all"
  [ "$value" == "$newvalue" ] && return 0
  [ -z "$value" ] && command="--add"
  git config $command "$key" "$newvalue"
}

function add_attribute() {
  local attribute="$1" file="$2"
  [ -z "$file" ] && file="$(git rev-parse --show-toplevel)/.gitattributes"
  [ ! -f "$file" ] && touch "$file"
  grep "$attribute" "$file" >/dev/null 2>&1
  [ "0" == "$?" ] || echo "$attribute" >> "$file"
}

function install() {
  local attributes=$GIT_DIR/info/attributes
  add_or_replace_git_config merge.renormalize true
  add_or_replace_git_config filter.git-encrypt.clean  "git-encrypt --clean"
  add_or_replace_git_config filter.git-encrypt.smudge "git-encrypt --smudge"
  add_or_replace_git_config diff.git-encrypt.textconv "git-encrypt --diff"
  add_attribute ".gitattributes !filter !diff" $attributes
}

function add_filter_pattern() {
  local pattern="$1"
  add_attribute "$pattern filter=git-encrypt diff=git-encrypt"
}

function list_filter_patterns() {
  local dir=$(git rev-parse --show-toplevel)
  grep "filter=git-encrypt diff=git-encrypt" $dir/.gitattributes 2>/dev/null | awk '{print $1}'
}

function clean() {
  base64
}

function smudge() {
  base64 -D 2>/dev/null || cat
}

function diff() {
  base64 -D "$1" 2>/dev/null || cat "$1"
}

declare COMMAND="$1"
shift 1

case "$COMMAND" in
  -h|--help) "$0" -h; exit 0 ;;
  --install) install;;
  --add-pattern) add_filter_pattern "$1" ;;
  --list-patterns) list_filter_patterns ;;
  --clean) clean ;;
  --smudge) smudge ;;
  --diff) diff "$1" ;;
esac

